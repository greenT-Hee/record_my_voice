[
  {"question": "브라우저 렌더링 과정을 설명하시오.", "answer" : "첫번째는 parsing 단계로, HTML파일과 CSS 파일을 파싱하여 각각 트리를 만듭니다. HTML 파일을 해석하여 DOM 트리를 구성하고, 파싱 중 HTML에 CSS가 포함되면 CSSOM트리 구성 작업을 진행합니다. 두번째는 Style 단계로 두 트리를 결합하여 렌더 트리를 만듭니다. Render 트리는 화면에 보여질 내용만 홈하기 때문에 display:none과 meta tag 같은 화면에 보이지 않는 것들은 포함되지 않습니다. 세번째는 layout 단계로, Render 트리를 화면에 어떻게 배치해야 하는지 노드의 정확한 위와 크기를 계산합니다. 네번째는 Paint 단계로 계산된 값을 이용해 각 노드를 화면상의 실제 픽셀로 변화하고 레이어를 만듭니다. 마지막으로 Composite 단계로 레이어를 합성하여 실제 화면에 나타냅니다.", "categoryId" :"1"},
  {"question": "주소창에 URL을 입력하면 어떤 일이 생길까요?", "answer" : "1. 사용자가 url을 주소창에 입력, 2. 브라우저가 url의 ip 주소 찾기 우해 캐시에서 DNS 기록 확인(브라우저캐시 > os 캐시 > 라우터 캐시 > ISP 캐시), 3. 요청한 url이 캐시에 없으면 ISP의 DNS 서버가 URL을 호스팅하는 IP 주소를 찾는다. 4. 브라우저가 해당 웹 서버와 TCP 연결을 시작, 5. TCP 연결이 설정되면 브라우저가 웹 서버에 HTTP 요청을 처리하고 응답을 보냄 > 브라우저가 HTML 콘텐츠를 보여주게 됨. ", "categoryId" :"1"},
  {"question": "CORS란? 대응 방법은? ", "answer" : "출처가 다른 서버에 요청을 보낼 때, 브라우저에서 보안 상 차단하는 것을 지칭한다. 가장 확실한 해결책은 백엔드 서버에서 Access-Control-Allow-Origin을 명시해주면된다. ", "categoryId" :"1"},
  {"question": "RESTful API란?", "answer" : "http url을 통해 사용자가 받고자하는 리소스를 명시하고 POST, GET, PUT, DELETE와 같은 HTTP Method를 통해 서버에 요청을 보내면 서버는 리소스를 확인하여 응답하는 방식인 REST 규격을 준수하는 API", "categoryId" :"1"},
  {"question": "크로스브라우징이란, 그리고 구현 방법은> ", "answer" : "서로 다른 브라우저에서 ui, 기능이 똑같이 구현되도록 하는 것을 의미, 방법: prefix 라이브러리 사용 등", "categoryId" :"1"},
  {"question": "position에 대해 설명해주세요.", "answer" : "position은 요소 배채 방식, 1. static: 포지션의 기본값, 요소를 문서 흐름에 맞게 배치, 2.Relative: 요소가 차지하는 공간은 static과 동일하나 top, left, right, bottom 설정이 가능하다 3. absolute: relative를 가진 상위 요소를 기준으로 상대적 위치를 줄 수 있다. 상위에 relative가 없으면 body가 기준이 됨, 4.fixed: 브라우저에 고정 위치 설정할 때 사용, 플로팅 배너, 탑바, 헤더 등에 사용, 5.sticky: 스크롤시, 기준점 전에는 relative 기준점 이후는 fixed처럼 움직임(기준점: 부모요소 ) ", "categoryId" :"2"},
  {"question": "Doctype이란?", "answer" : "문서 형식 선언문, 웹브라우저에게 알려주는 역할/ HTML5, HTML, XHTML 3가지가 있다. ", "categoryId" :"2"},
  {"question": "메타 태그(meta Tag)이란?
  ", "answer" : " 검색 엔진에 사용자에게 페이지를 표시하는 방법과 검색 결과에 표시되는 방법을 알려줍니다", "categoryId" :"2"},
  {"question": "시맨틱 태그 ( Semantic Tag )이란?", "answer" : "시맨틱 태그란 의미가 있는 태그라고 합니다. div나 span과 같이 의미가 없는 태그는 태그 이름만 보고는 어떤 내용인지 전혀 유추할 수가 없는 반면, form, table, article 등 의미가 있는 태그는 내용을 명확하게 정의합니다.", "categoryId" :"2"},
  {"question": "reset CSS란?", "answer" : "브라우저마다 다르게 설정된 요소의 기본 스타일링을 모두 초기화하는 방식이고
  크로스 브라우징을 위해 필요한 속성을 임의로 지정하여 파일로 통합한 것입니다.", "categoryId" :"2"},
  {"question": "JS를 body 맨 밑에 둬야 하는 이유", "answer" : "HTML 파서는 스크립트 태그를 만나면 js 엔진으로 제어권이 넘어가고 스크립트 실행 완료 후 dom 생성을 재개하게 된다. 스크립트 코드가 무거운 경우, DOM 트리 없는 상태에서 스크립트가 실행되면 에러가 발생할 수 있기 때문에, 특별한 이유가 아니라면 body 끝에 적는 것이 좋은 방법이다.", "categoryId" :"3"},
  {"question": "변수 선언, 초기화, 할당의 차이점", "answer" : "변수 선언은 변수를 생성하는 단계로 해당 식별자를 등록하여 스코프가 참조할 대상을 만듭니다. 초기화는 메모리에 변수 저장을 위한 공간 확보 단계입니다. 기본값으로 undefined가 할당됩니다. 할당은 = 연산를 사용하여 값을 할당하는 단계로, undefined로 초기화된 변수에 실제 값을 할당합니다.", "categoryId" :"3"},
  {"question": "데이터 타입에 대해 설명해주세요.", "answer" : "JS이 타입은 원시값과 객체로 나뉩니다. 원시값은 불변값을 의미하며 boolean, null, undefined, number, bigibit, string, symbol 타입이 있습니다. 객체는 키와 값 사이의 매핑이며  ", "categoryId" :"3"},
  {"question": "React에 대해 설명해주세요.", "answer" : "UI를 만들기 위한 자바스크립트 라이브러리입니다. 캡슐화된 컴포넌트로 복잡한 UI를 만들 수 있도록 지원하고 데이터가 변경됨에 따라 해당 컴포넌트만 효율적으로 갱시한고 렌더링합니다.", "categoryId" :"4"},
  {"question": "Virtual DOM 작동 원리를 설명해주세요.", "answer" : "리액트는 가상돔을 사용한다. 가상돔은 실제 돔을 모방한 가상의 돔을 구성해 원래 돔과 비교하여 달라진 부부만 리렌더링하는 방식으로 동작한다. 가상돔을 사용하는 이유는 변경되는 부분만 빠르게 파악해서 렌더링하기 때문에 렌더링 성능을 향상시킨다. ", "categoryId" :"4"},
  {"question": "JSX에 대해 설명해주세요.", "answer" : "JSX는 JavaScript를 확장한 문법으로, 공식문서에서 React와 함께 사용할 것을 권장하고 있는 문법이다. JSX는 JavaScript의 모든 기능이 포함되어 있으며, React Element를 생성하기 위해 사용됩니다.", "categoryId" :"4"}
]

// https://prmblogs.tistory.com/13